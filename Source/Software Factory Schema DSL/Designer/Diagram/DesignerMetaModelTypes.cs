//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Reflection;
using System.Collections.Generic;
using Microsoft.VisualStudio.Modeling;

namespace ISpySoft.SFSchemaLanguage.Designer{
	/// <summary>
	/// Partial class of the Designer metamodel
	/// </summary>
	public partial class SFSchemaLanguageDesigner
	{
		/// <summary>
		/// Return rule types
		/// </summary>
		/// <returns></returns>
		protected override Type[] AllMetaModelTypes()
		{
			Type generatedMetaModelTypesClass = typeof(GeneratedMetaModelTypes);
			FieldInfo[] fields = generatedMetaModelTypesClass.GetFields(BindingFlags.Static | BindingFlags.NonPublic);
			List<Type> ruleTypes = new List<Type>(fields.Length);
			foreach (FieldInfo field in fields)
			{
				Type type = field.GetValue(null) as Type;
				Debug.Assert(type != null);
				if (type != null)
				{
					ruleTypes.Add(type);
				}
			}
			
			return ruleTypes.ToArray();
		}
	}

	internal static partial class GeneratedMetaModelTypes
	{
		// If you have hand-written rules, you define a 
		// partial GeneratedMetaModelTypes and put the types
		// of the rules as internal static fields of the class. 
		// For example: 
		// internal static Type MyRuleType = typeof(MyRule); 
	}
}


