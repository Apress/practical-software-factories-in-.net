//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ISpySoft.SFSchemaLanguage.Designer
{
	/// <summary>
	/// 
	/// </summary>
	[Microsoft.VisualStudio.Modeling.InheritBaseModel("8dccb20a-ba4c-4f0e-97af-3d5101eb3e71")]
	[Microsoft.VisualStudio.Modeling.InheritBaseModel("91d59b16-e488-4a28-8d51-59273ad5bf2e")]
	[System.CLSCompliant(true)]
	[System.Serializable]
	[Microsoft.VisualStudio.Modeling.MetaObject(ISpySoft.SFSchemaLanguage.Designer.SFSchemaLanguageDesigner.MetaModelGuidString, "SFSchemaLanguageDesigner")]
	public  partial class SFSchemaLanguageDesigner : Microsoft.VisualStudio.Modeling.SubStore
	{
		#region SFSchemaLanguageDesigner's Generated MetaClass Code
		/// <summary>
		/// MetaModel Guid String
		/// </summary>
		public const System.String MetaModelGuidString = "38bf1796-1f42-4cd4-8a05-bcd0c862442e";
		/// <summary>
		/// MetaModel Guid
		/// </summary>
		public static readonly System.Guid MetaModelGuid = new System.Guid(ISpySoft.SFSchemaLanguage.Designer.SFSchemaLanguageDesigner.MetaModelGuidString);
		/// <summary>
		/// Default Constructor called by the IMS -- do not call directly
		/// </summary>
		public SFSchemaLanguageDesigner() : base()
		{
		}
		/// <summary>
		/// Constructor
		/// </summary>
		public SFSchemaLanguageDesigner(Microsoft.VisualStudio.Modeling.Store store) : base(store.DefaultPartition, ISpySoft.SFSchemaLanguage.Designer.SFSchemaLanguageDesigner.MetaModelGuid)
		{
		}
		/// <summary>
		/// Constructor
		/// </summary>
		public SFSchemaLanguageDesigner(Microsoft.VisualStudio.Modeling.Partition partition) : base(partition, ISpySoft.SFSchemaLanguage.Designer.SFSchemaLanguageDesigner.MetaModelGuid)
		{
		}
		#endregion

	}
	#region SFSchemaLanguageDesigner's ResourceManager Code
	public  partial class SFSchemaLanguageDesigner
	{
		private static System.Resources.ResourceManager resourceManager = null;
		/// <summary>
		/// The base name of this models resources.
		/// </summary>
		public const string ResourceBaseName = "ISpySoft.SFSchemaLanguage.Designer.Diagram.Designer.Resource";
		/// <summary>
		/// Returns the SubStore's ResourceManager. If the ResourceManager does not already exist, then it is created.
		/// </summary>
		public override System.Resources.ResourceManager ResourceManager
		{
			get
			{
				return ISpySoft.SFSchemaLanguage.Designer.SFSchemaLanguageDesigner.SingletonResourceManager;
			}
		}
		/// <summary>
		/// A internal object used for synchronization.
		/// </summary>
		private static object internalSyncObject;
		/// <summary>
		/// Gets the internal object used for synchronization.
		/// </summary>
		private static object InternalSyncObject 
		{
			get 
			{
				if (internalSyncObject == null) 
				{
					object o = new object();
					System.Threading.Interlocked.CompareExchange(ref internalSyncObject, o, null);
				}
				return internalSyncObject;
			}
		}
		/// <summary>
		/// Gets the Singleton ResourceManager for this SubStore
		/// </summary>
		public static System.Resources.ResourceManager SingletonResourceManager
		{
			get
			{
				if (ISpySoft.SFSchemaLanguage.Designer.SFSchemaLanguageDesigner.resourceManager == null)
				{
					lock (ISpySoft.SFSchemaLanguage.Designer.SFSchemaLanguageDesigner.InternalSyncObject)
					{
						if (ISpySoft.SFSchemaLanguage.Designer.SFSchemaLanguageDesigner.resourceManager == null)
						{
							ISpySoft.SFSchemaLanguage.Designer.SFSchemaLanguageDesigner.resourceManager = new System.Resources.ResourceManager(ResourceBaseName, typeof(ISpySoft.SFSchemaLanguage.Designer.SFSchemaLanguageDesigner).Assembly);
						}
					}
				}
				return ISpySoft.SFSchemaLanguage.Designer.SFSchemaLanguageDesigner.resourceManager;
			}
		}
	}
	#endregion
	/// <summary>
	/// Copy closure visitor filter
	/// </summary>
	[System.CLSCompliant(true)]
	[System.Serializable]
	public  class SFSchemaLanguageDesignerCopyClosure : Microsoft.VisualStudio.Modeling.IElementVisitorFilter
	{
		/// <summary>
		/// MetaRoles
		/// </summary>
		private System.Collections.Generic.Dictionary<System.Guid, System.Guid> metaRolesMember;
		/// <summary>
		/// Constructor
		/// </summary>
		public SFSchemaLanguageDesignerCopyClosure()
		{
			#region Initialize MetaData Table
			#endregion
		}
		/// <summary>
		/// Called to ask the filter if a particular relationship from a source element should be included in the traversal
		/// </summary>
		/// <param name="walker">ElementWalker traversing the model</param>
		/// <param name="sourceElement">Model Element playing the source role</param>
		/// <param name="sourceRoleInfo">MetaRoleInfo of the role that the source element is playing in the relationship</param>
		/// <param name="metaRelationshipInfo">MetaRelationshipInfo for the ElementLink in question</param>
		/// <param name="targetRelationship">Relationship in question</param>
		/// <returns>Yes if the relationship should be traversed</returns>
		public virtual Microsoft.VisualStudio.Modeling.VisitorFilterResult ShouldVisitRelationship(Microsoft.VisualStudio.Modeling.ElementWalker walker, Microsoft.VisualStudio.Modeling.ModelElement sourceElement, Microsoft.VisualStudio.Modeling.MetaRoleInfo sourceRoleInfo, Microsoft.VisualStudio.Modeling.MetaRelationshipInfo metaRelationshipInfo, Microsoft.VisualStudio.Modeling.ElementLink targetRelationship)
		{
			return this.MetaRoles.ContainsKey(sourceRoleInfo.Id) ? Microsoft.VisualStudio.Modeling.VisitorFilterResult.Yes : Microsoft.VisualStudio.Modeling.VisitorFilterResult.DoNotCare;
		}
		/// <summary>
		/// Called to ask the filter if a particular role player should be Visited during traversal
		/// </summary>
		/// <param name="walker">ElementWalker traversing the model</param>
		/// <param name="sourceElement">Model Element playing the source role</param>
		/// <param name="elementLink">Element Link that forms the relationship to the role player in question</param>
		/// <param name="targetRoleInfo">MetaRoleInfo of the target role</param>
		/// <param name="targetRolePlayer">Model Element that plays the target role in the relationship</param>
		/// <returns></returns>
		public virtual Microsoft.VisualStudio.Modeling.VisitorFilterResult ShouldVisitRolePlayer(Microsoft.VisualStudio.Modeling.ElementWalker walker, Microsoft.VisualStudio.Modeling.ModelElement sourceElement, Microsoft.VisualStudio.Modeling.ElementLink elementLink, Microsoft.VisualStudio.Modeling.MetaRoleInfo targetRoleInfo, Microsoft.VisualStudio.Modeling.ModelElement targetRolePlayer)
		{
			foreach (Microsoft.VisualStudio.Modeling.MetaRoleInfo metaRoleInfo in elementLink.MetaRelationship.MetaRoles)
			{
				if (metaRoleInfo != targetRoleInfo && this.MetaRoles.ContainsKey(metaRoleInfo.Id))
				{
					return Microsoft.VisualStudio.Modeling.VisitorFilterResult.Yes;
				}
			}
			return Microsoft.VisualStudio.Modeling.VisitorFilterResult.DoNotCare;
		}
		/// <summary>
		/// MetaRoles
		/// </summary>
		private System.Collections.Generic.Dictionary<System.Guid, System.Guid> MetaRoles
		{
			get
			{
				if (this.metaRolesMember == null)
				{
					this.metaRolesMember = new System.Collections.Generic.Dictionary<System.Guid, System.Guid>();
				}
				return this.metaRolesMember;
			}
		}

	}
	/// <summary>
	/// Remove closure visitor filter
	/// </summary>
	[System.CLSCompliant(true)]
	[System.Serializable]
	public  class SFSchemaLanguageDesignerRemoveClosure : Microsoft.VisualStudio.Modeling.IElementVisitorFilter
	{
		/// <summary>
		/// MetaRoles
		/// </summary>
		private System.Collections.Generic.Dictionary<System.Guid, System.Guid> metaRolesMember;
		/// <summary>
		/// Constructor
		/// </summary>
		public SFSchemaLanguageDesignerRemoveClosure()
		{
			#region Initialize MetaData Table
			#endregion
		}
		/// <summary>
		/// Called to ask the filter if a particular relationship from a source element should be included in the traversal
		/// </summary>
		/// <param name="walker">ElementWalker that is traversing the model</param>
		/// <param name="sourceElement">Model Element playing the source role</param>
		/// <param name="sourceRoleInfo">MetaRoleInfo of the role that the source element is playing in the relationship</param>
		/// <param name="metaRelationshipInfo">MetaRelationshipInfo for the ElementLink in question</param>
		/// <param name="targetRelationship">Relationship in question</param>
		/// <returns>Yes if the relationship should be traversed</returns>
		public virtual Microsoft.VisualStudio.Modeling.VisitorFilterResult ShouldVisitRelationship(Microsoft.VisualStudio.Modeling.ElementWalker walker, Microsoft.VisualStudio.Modeling.ModelElement sourceElement, Microsoft.VisualStudio.Modeling.MetaRoleInfo sourceRoleInfo, Microsoft.VisualStudio.Modeling.MetaRelationshipInfo metaRelationshipInfo, Microsoft.VisualStudio.Modeling.ElementLink targetRelationship)
		{
			return Microsoft.VisualStudio.Modeling.VisitorFilterResult.Yes;
		}
		/// <summary>
		/// Called to ask the filter if a particular role player should be Visited during traversal
		/// </summary>
		/// <param name="walker">ElementWalker that is traversing the model</param>
		/// <param name="sourceElement">Model Element playing the source role</param>
		/// <param name="elementLink">Element Link that forms the relationship to the role player in question</param>
		/// <param name="targetRoleInfo">MetaRoleInfo of the target role</param>
		/// <param name="targetRolePlayer">Model Element that plays the target role in the relationship</param>
		/// <returns></returns>
		public virtual Microsoft.VisualStudio.Modeling.VisitorFilterResult ShouldVisitRolePlayer(Microsoft.VisualStudio.Modeling.ElementWalker walker, Microsoft.VisualStudio.Modeling.ModelElement sourceElement, Microsoft.VisualStudio.Modeling.ElementLink elementLink, Microsoft.VisualStudio.Modeling.MetaRoleInfo targetRoleInfo, Microsoft.VisualStudio.Modeling.ModelElement targetRolePlayer)
		{
			return this.MetaRoles.ContainsKey(targetRoleInfo.Id) ? Microsoft.VisualStudio.Modeling.VisitorFilterResult.Yes : Microsoft.VisualStudio.Modeling.VisitorFilterResult.DoNotCare;
		}
		/// <summary>
		/// MetaRoles
		/// </summary>
		private System.Collections.Generic.Dictionary<System.Guid, System.Guid> MetaRoles
		{
			get
			{
				if (this.metaRolesMember == null)
				{
					this.metaRolesMember = new System.Collections.Generic.Dictionary<System.Guid, System.Guid>();
				}
				return this.metaRolesMember;
			}
		}

	}
	/// <summary>
	/// 
	/// </summary>
	public  partial class SFSchemaLanguageDesigner : Microsoft.VisualStudio.Modeling.SubStore
	{
		#region SFSchemaLanguageDesigner's AllGeneratedMetaModelTypes Code
		/// <summary>
		/// Virtual method that returns a collection of all types for metamodel 
		/// </summary>
		protected sealed override System.Type[] AllGeneratedMetaModelTypes()
		{
			System.Type[] typeArray = new System.Type[]
			{
				typeof(ISpySoft.SFSchemaLanguage.Designer.SFSchemaLanguageDesigner),
				typeof(ISpySoft.SFSchemaLanguage.Designer.ActivityShape),
				typeof(ISpySoft.SFSchemaLanguage.Designer.ActivityShapeElementFactoryCreator),
				typeof(ISpySoft.SFSchemaLanguage.Designer.ArtifactShape),
				typeof(ISpySoft.SFSchemaLanguage.Designer.ArtifactShapeElementFactoryCreator),
				typeof(ISpySoft.SFSchemaLanguage.Designer.MappingShape),
				typeof(ISpySoft.SFSchemaLanguage.Designer.MappingShapeElementFactoryCreator),
				typeof(ISpySoft.SFSchemaLanguage.Designer.ViewPointShape),
				typeof(ISpySoft.SFSchemaLanguage.Designer.ViewPointShapeElementFactoryCreator),
				typeof(ISpySoft.SFSchemaLanguage.Designer.SchemaModelItemHasSchemaModelItemConnector),
				typeof(ISpySoft.SFSchemaLanguage.Designer.SchemaModelItemHasSchemaModelItemConnectorElementFactoryCreator),
				typeof(ISpySoft.SFSchemaLanguage.Designer.SFSchemaLanguageDiagram),
				typeof(ISpySoft.SFSchemaLanguage.Designer.SFSchemaLanguageDiagramElementFactoryCreator),

			};
			return typeArray;
		}
		#endregion
	}
}
namespace ISpySoft.SFSchemaLanguage.Designer
{
	/// <summary>
	/// 
	/// </summary>
	[Microsoft.VisualStudio.Modeling.ShapeFor(typeof(ISpySoft.SFSchemaLanguage.DomainModel.Activity))]
	[System.ComponentModel.ToolboxItemFilterAttribute(SFSchemaLanguageDiagram.DiagramFilterString, System.ComponentModel.ToolboxItemFilterType.Require)]
	
	[Microsoft.VisualStudio.Modeling.MetaToolboxItem("SFSchemaLanguageDiagramActivityShape", 4, "activity", "ActivityShapeToolboxCaption", "ActivityShapeToolboxCaption", "ToolboxTab", ContextSensitiveHelpKeywordId="ExampleShapeHelpId")][System.CLSCompliant(true)]
	[System.Serializable]
	[Microsoft.VisualStudio.Modeling.MetaClass("38bf1796-1f42-4cd4-8a05-bcd0c862442e")]
	[Microsoft.VisualStudio.Modeling.MetaObject(ISpySoft.SFSchemaLanguage.Designer.ActivityShape.MetaClassGuidString, "ActivityShape")]
	public  partial class ActivityShape : Microsoft.VisualStudio.Modeling.Utilities.GeometryShape
	{
		#region ActivityShape's Generated Shape Code
		/// <summary>
		/// MetaClass Guid String
		/// </summary>
		public new const System.String MetaClassGuidString = "014c9cb1-bb0f-4ce1-8a55-ad6bd4030b7d";
		/// <summary>
		/// MetaClass Guid
		/// </summary>
		public static readonly new System.Guid MetaClassGuid = new System.Guid(ISpySoft.SFSchemaLanguage.Designer.ActivityShape.MetaClassGuidString);
		#region Boilerplate code for every Shape-derived class
		/// <summary>
		/// Style Set
		/// </summary>
		private static Microsoft.VisualStudio.Modeling.Diagrams.StyleSet classStyleSet = null;
		/// <summary>
		/// Shape Fields
		/// </summary>
		private static Microsoft.VisualStudio.Modeling.Diagrams.ShapeFieldCollection shapeFields = null;
		/// <summary>
		/// Style Set
		/// </summary>
		protected override Microsoft.VisualStudio.Modeling.Diagrams.StyleSet ClassStyleSet
		{
			get
			{
				if (classStyleSet == null)
				{
					classStyleSet = CreateClassStyleSet();
				}
				return classStyleSet;
			}
		}
		/// <summary>
		/// Shape Fields
		/// </summary>
		public override Microsoft.VisualStudio.Modeling.Diagrams.ShapeFieldCollection ShapeFields
		{
			get
			{
				if (shapeFields == null)
				{
					shapeFields = CreateShapeFields();
				}
				return shapeFields;
			}
		}
		#endregion
		#endregion

	}
	#region ActivityShape's Generated Constructor Code
	public  partial class ActivityShape
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public ActivityShape(Microsoft.VisualStudio.Modeling.Store store, Microsoft.VisualStudio.Modeling.ModelDataBag bag) : base(store.DefaultPartition, bag)
		{
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static ActivityShape CreateActivityShape(Microsoft.VisualStudio.Modeling.Store store)
		{
			return CreateActivityShape(store.DefaultPartition);
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static ActivityShape CreateAndInitializeActivityShape(Microsoft.VisualStudio.Modeling.Store store, Microsoft.VisualStudio.Modeling.AttributeAssignment[] assignments)
		{
			return CreateAndInitializeActivityShape(store.DefaultPartition, assignments);
		}
		/// <summary>
		/// Constructor
		/// </summary>
		public ActivityShape(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.ModelDataBag bag)
			: base(partition, bag)
		{
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static ActivityShape CreateActivityShape(Microsoft.VisualStudio.Modeling.Partition partition)
		{
			return (ActivityShape)partition.ElementFactory.CreateElement(typeof(ActivityShape));
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static ActivityShape CreateAndInitializeActivityShape(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.AttributeAssignment[] assignments)
		{
			return (ActivityShape)partition.ElementFactory.CreateElement(typeof(ActivityShape), assignments);
		}
	}
	#endregion
	#region Class Factory Creator for ActivityShape
	/// <summary>
	/// ActivityShape Class Factory Creator
	/// </summary>
	[Microsoft.VisualStudio.Modeling.ElementFactoryCreatorFor(typeof(ISpySoft.SFSchemaLanguage.Designer.ActivityShape))]
	public sealed class ActivityShapeElementFactoryCreator : Microsoft.VisualStudio.Modeling.ElementFactoryCreator
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public ActivityShapeElementFactoryCreator()
		{
		}
		/// <summary>
		/// Class Factory Create Method
		/// </summary>
		public override Microsoft.VisualStudio.Modeling.ModelElement Create(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.ModelDataBag bag)
		{
			return new ISpySoft.SFSchemaLanguage.Designer.ActivityShape( partition, bag );
		}
		/// <summary>
		/// Create an instance of the createor object
		/// </summary>
		public static ActivityShapeElementFactoryCreator Instance
		{
			get
			{
				return new ActivityShapeElementFactoryCreator();
			}
		}
	}
	#endregion

}
namespace ISpySoft.SFSchemaLanguage.Designer
{
	/// <summary>
	/// 
	/// </summary>
	[Microsoft.VisualStudio.Modeling.ShapeFor(typeof(ISpySoft.SFSchemaLanguage.DomainModel.Artifact))]
	[System.ComponentModel.ToolboxItemFilterAttribute(SFSchemaLanguageDiagram.DiagramFilterString, System.ComponentModel.ToolboxItemFilterType.Require)]
	
	[Microsoft.VisualStudio.Modeling.MetaToolboxItem("SFSchemaLanguageDiagramArtifactShape", 3, "artifact", "ArtifactShapeToolboxCaption", "ArtifactShapeToolboxCaption", "ToolboxTab", ContextSensitiveHelpKeywordId="ExampleShapeHelpId")][System.CLSCompliant(true)]
	[System.Serializable]
	[Microsoft.VisualStudio.Modeling.MetaClass("38bf1796-1f42-4cd4-8a05-bcd0c862442e")]
	[Microsoft.VisualStudio.Modeling.MetaObject(ISpySoft.SFSchemaLanguage.Designer.ArtifactShape.MetaClassGuidString, "ArtifactShape")]
	public  partial class ArtifactShape : Microsoft.VisualStudio.Modeling.Utilities.GeometryShape
	{
		#region ArtifactShape's Generated Shape Code
		/// <summary>
		/// MetaClass Guid String
		/// </summary>
		public new const System.String MetaClassGuidString = "38fcbb91-6afa-44b5-9e64-08c4a31d545c";
		/// <summary>
		/// MetaClass Guid
		/// </summary>
		public static readonly new System.Guid MetaClassGuid = new System.Guid(ISpySoft.SFSchemaLanguage.Designer.ArtifactShape.MetaClassGuidString);
		#region Boilerplate code for every Shape-derived class
		/// <summary>
		/// Style Set
		/// </summary>
		private static Microsoft.VisualStudio.Modeling.Diagrams.StyleSet classStyleSet = null;
		/// <summary>
		/// Shape Fields
		/// </summary>
		private static Microsoft.VisualStudio.Modeling.Diagrams.ShapeFieldCollection shapeFields = null;
		/// <summary>
		/// Style Set
		/// </summary>
		protected override Microsoft.VisualStudio.Modeling.Diagrams.StyleSet ClassStyleSet
		{
			get
			{
				if (classStyleSet == null)
				{
					classStyleSet = CreateClassStyleSet();
				}
				return classStyleSet;
			}
		}
		/// <summary>
		/// Shape Fields
		/// </summary>
		public override Microsoft.VisualStudio.Modeling.Diagrams.ShapeFieldCollection ShapeFields
		{
			get
			{
				if (shapeFields == null)
				{
					shapeFields = CreateShapeFields();
				}
				return shapeFields;
			}
		}
		#endregion
		#endregion

	}
	#region ArtifactShape's Generated Constructor Code
	public  partial class ArtifactShape
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public ArtifactShape(Microsoft.VisualStudio.Modeling.Store store, Microsoft.VisualStudio.Modeling.ModelDataBag bag) : base(store.DefaultPartition, bag)
		{
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static ArtifactShape CreateArtifactShape(Microsoft.VisualStudio.Modeling.Store store)
		{
			return CreateArtifactShape(store.DefaultPartition);
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static ArtifactShape CreateAndInitializeArtifactShape(Microsoft.VisualStudio.Modeling.Store store, Microsoft.VisualStudio.Modeling.AttributeAssignment[] assignments)
		{
			return CreateAndInitializeArtifactShape(store.DefaultPartition, assignments);
		}
		/// <summary>
		/// Constructor
		/// </summary>
		public ArtifactShape(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.ModelDataBag bag)
			: base(partition, bag)
		{
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static ArtifactShape CreateArtifactShape(Microsoft.VisualStudio.Modeling.Partition partition)
		{
			return (ArtifactShape)partition.ElementFactory.CreateElement(typeof(ArtifactShape));
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static ArtifactShape CreateAndInitializeArtifactShape(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.AttributeAssignment[] assignments)
		{
			return (ArtifactShape)partition.ElementFactory.CreateElement(typeof(ArtifactShape), assignments);
		}
	}
	#endregion
	#region Class Factory Creator for ArtifactShape
	/// <summary>
	/// ArtifactShape Class Factory Creator
	/// </summary>
	[Microsoft.VisualStudio.Modeling.ElementFactoryCreatorFor(typeof(ISpySoft.SFSchemaLanguage.Designer.ArtifactShape))]
	public sealed class ArtifactShapeElementFactoryCreator : Microsoft.VisualStudio.Modeling.ElementFactoryCreator
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public ArtifactShapeElementFactoryCreator()
		{
		}
		/// <summary>
		/// Class Factory Create Method
		/// </summary>
		public override Microsoft.VisualStudio.Modeling.ModelElement Create(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.ModelDataBag bag)
		{
			return new ISpySoft.SFSchemaLanguage.Designer.ArtifactShape( partition, bag );
		}
		/// <summary>
		/// Create an instance of the createor object
		/// </summary>
		public static ArtifactShapeElementFactoryCreator Instance
		{
			get
			{
				return new ArtifactShapeElementFactoryCreator();
			}
		}
	}
	#endregion

}
namespace ISpySoft.SFSchemaLanguage.Designer
{
	/// <summary>
	/// 
	/// </summary>
	[Microsoft.VisualStudio.Modeling.ShapeFor(typeof(ISpySoft.SFSchemaLanguage.DomainModel.Mapping))]
	[System.ComponentModel.ToolboxItemFilterAttribute(SFSchemaLanguageDiagram.DiagramFilterString, System.ComponentModel.ToolboxItemFilterType.Require)]
	
	[Microsoft.VisualStudio.Modeling.MetaToolboxItem("SFSchemaLanguageDiagramMappingShape", 1, "mapping", "MappingShapeToolboxCaption", "MappingShapeToolboxCaption", "ToolboxTab", ContextSensitiveHelpKeywordId="ExampleShapeHelpId")][System.CLSCompliant(true)]
	[System.Serializable]
	[Microsoft.VisualStudio.Modeling.MetaClass("38bf1796-1f42-4cd4-8a05-bcd0c862442e")]
	[Microsoft.VisualStudio.Modeling.MetaObject(ISpySoft.SFSchemaLanguage.Designer.MappingShape.MetaClassGuidString, "MappingShape")]
	public  partial class MappingShape : Microsoft.VisualStudio.Modeling.Utilities.GeometryShape
	{
		#region MappingShape's Generated Shape Code
		/// <summary>
		/// MetaClass Guid String
		/// </summary>
		public new const System.String MetaClassGuidString = "5f1b92fc-e7b0-4412-b432-79766a46865f";
		/// <summary>
		/// MetaClass Guid
		/// </summary>
		public static readonly new System.Guid MetaClassGuid = new System.Guid(ISpySoft.SFSchemaLanguage.Designer.MappingShape.MetaClassGuidString);
		#region Boilerplate code for every Shape-derived class
		/// <summary>
		/// Style Set
		/// </summary>
		private static Microsoft.VisualStudio.Modeling.Diagrams.StyleSet classStyleSet = null;
		/// <summary>
		/// Shape Fields
		/// </summary>
		private static Microsoft.VisualStudio.Modeling.Diagrams.ShapeFieldCollection shapeFields = null;
		/// <summary>
		/// Style Set
		/// </summary>
		protected override Microsoft.VisualStudio.Modeling.Diagrams.StyleSet ClassStyleSet
		{
			get
			{
				if (classStyleSet == null)
				{
					classStyleSet = CreateClassStyleSet();
				}
				return classStyleSet;
			}
		}
		/// <summary>
		/// Shape Fields
		/// </summary>
		public override Microsoft.VisualStudio.Modeling.Diagrams.ShapeFieldCollection ShapeFields
		{
			get
			{
				if (shapeFields == null)
				{
					shapeFields = CreateShapeFields();
				}
				return shapeFields;
			}
		}
		#endregion
		#endregion

	}
	#region MappingShape's Generated Constructor Code
	public  partial class MappingShape
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public MappingShape(Microsoft.VisualStudio.Modeling.Store store, Microsoft.VisualStudio.Modeling.ModelDataBag bag) : base(store.DefaultPartition, bag)
		{
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static MappingShape CreateMappingShape(Microsoft.VisualStudio.Modeling.Store store)
		{
			return CreateMappingShape(store.DefaultPartition);
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static MappingShape CreateAndInitializeMappingShape(Microsoft.VisualStudio.Modeling.Store store, Microsoft.VisualStudio.Modeling.AttributeAssignment[] assignments)
		{
			return CreateAndInitializeMappingShape(store.DefaultPartition, assignments);
		}
		/// <summary>
		/// Constructor
		/// </summary>
		public MappingShape(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.ModelDataBag bag)
			: base(partition, bag)
		{
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static MappingShape CreateMappingShape(Microsoft.VisualStudio.Modeling.Partition partition)
		{
			return (MappingShape)partition.ElementFactory.CreateElement(typeof(MappingShape));
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static MappingShape CreateAndInitializeMappingShape(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.AttributeAssignment[] assignments)
		{
			return (MappingShape)partition.ElementFactory.CreateElement(typeof(MappingShape), assignments);
		}
	}
	#endregion
	#region Class Factory Creator for MappingShape
	/// <summary>
	/// MappingShape Class Factory Creator
	/// </summary>
	[Microsoft.VisualStudio.Modeling.ElementFactoryCreatorFor(typeof(ISpySoft.SFSchemaLanguage.Designer.MappingShape))]
	public sealed class MappingShapeElementFactoryCreator : Microsoft.VisualStudio.Modeling.ElementFactoryCreator
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public MappingShapeElementFactoryCreator()
		{
		}
		/// <summary>
		/// Class Factory Create Method
		/// </summary>
		public override Microsoft.VisualStudio.Modeling.ModelElement Create(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.ModelDataBag bag)
		{
			return new ISpySoft.SFSchemaLanguage.Designer.MappingShape( partition, bag );
		}
		/// <summary>
		/// Create an instance of the createor object
		/// </summary>
		public static MappingShapeElementFactoryCreator Instance
		{
			get
			{
				return new MappingShapeElementFactoryCreator();
			}
		}
	}
	#endregion

}
namespace ISpySoft.SFSchemaLanguage.Designer
{
	/// <summary>
	/// 
	/// </summary>
	[Microsoft.VisualStudio.Modeling.ShapeFor(typeof(ISpySoft.SFSchemaLanguage.DomainModel.ViewPoint))]
	[System.ComponentModel.ToolboxItemFilterAttribute(SFSchemaLanguageDiagram.DiagramFilterString, System.ComponentModel.ToolboxItemFilterType.Require)]
	
	[Microsoft.VisualStudio.Modeling.MetaToolboxItem("SFSchemaLanguageDiagramViewPointShape", 0, "viewpoint", "ViewPointShapeToolboxCaption", "ViewPointShapeToolboxCaption", "ToolboxTab", ContextSensitiveHelpKeywordId="ExampleShapeHelpId")][System.CLSCompliant(true)]
	[System.Serializable]
	[Microsoft.VisualStudio.Modeling.MetaClass("38bf1796-1f42-4cd4-8a05-bcd0c862442e")]
	[Microsoft.VisualStudio.Modeling.MetaObject(ISpySoft.SFSchemaLanguage.Designer.ViewPointShape.MetaClassGuidString, "ViewPointShape")]
	public  partial class ViewPointShape : Microsoft.VisualStudio.Modeling.Utilities.CompartmentShape
	{
		#region ViewPointShape's Generated Shape Code
		/// <summary>
		/// MetaClass Guid String
		/// </summary>
		public new const System.String MetaClassGuidString = "54702bb2-8139-4e85-8069-37c998529369";
		/// <summary>
		/// MetaClass Guid
		/// </summary>
		public static readonly new System.Guid MetaClassGuid = new System.Guid(ISpySoft.SFSchemaLanguage.Designer.ViewPointShape.MetaClassGuidString);
		#region Boilerplate code for every Shape-derived class
		/// <summary>
		/// Style Set
		/// </summary>
		private static Microsoft.VisualStudio.Modeling.Diagrams.StyleSet classStyleSet = null;
		/// <summary>
		/// Shape Fields
		/// </summary>
		private static Microsoft.VisualStudio.Modeling.Diagrams.ShapeFieldCollection shapeFields = null;
		/// <summary>
		/// Style Set
		/// </summary>
		protected override Microsoft.VisualStudio.Modeling.Diagrams.StyleSet ClassStyleSet
		{
			get
			{
				if (classStyleSet == null)
				{
					classStyleSet = CreateClassStyleSet();
				}
				return classStyleSet;
			}
		}
		/// <summary>
		/// Shape Fields
		/// </summary>
		public override Microsoft.VisualStudio.Modeling.Diagrams.ShapeFieldCollection ShapeFields
		{
			get
			{
				if (shapeFields == null)
				{
					shapeFields = CreateShapeFields();
				}
				return shapeFields;
			}
		}
		#endregion
		#endregion

	}
	#region ViewPointShape's Generated Constructor Code
	public  partial class ViewPointShape
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public ViewPointShape(Microsoft.VisualStudio.Modeling.Store store, Microsoft.VisualStudio.Modeling.ModelDataBag bag) : base(store.DefaultPartition, bag)
		{
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static ViewPointShape CreateViewPointShape(Microsoft.VisualStudio.Modeling.Store store)
		{
			return CreateViewPointShape(store.DefaultPartition);
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static ViewPointShape CreateAndInitializeViewPointShape(Microsoft.VisualStudio.Modeling.Store store, Microsoft.VisualStudio.Modeling.AttributeAssignment[] assignments)
		{
			return CreateAndInitializeViewPointShape(store.DefaultPartition, assignments);
		}
		/// <summary>
		/// Constructor
		/// </summary>
		public ViewPointShape(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.ModelDataBag bag)
			: base(partition, bag)
		{
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static ViewPointShape CreateViewPointShape(Microsoft.VisualStudio.Modeling.Partition partition)
		{
			return (ViewPointShape)partition.ElementFactory.CreateElement(typeof(ViewPointShape));
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static ViewPointShape CreateAndInitializeViewPointShape(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.AttributeAssignment[] assignments)
		{
			return (ViewPointShape)partition.ElementFactory.CreateElement(typeof(ViewPointShape), assignments);
		}
	}
	#endregion
	#region Class Factory Creator for ViewPointShape
	/// <summary>
	/// ViewPointShape Class Factory Creator
	/// </summary>
	[Microsoft.VisualStudio.Modeling.ElementFactoryCreatorFor(typeof(ISpySoft.SFSchemaLanguage.Designer.ViewPointShape))]
	public sealed class ViewPointShapeElementFactoryCreator : Microsoft.VisualStudio.Modeling.ElementFactoryCreator
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public ViewPointShapeElementFactoryCreator()
		{
		}
		/// <summary>
		/// Class Factory Create Method
		/// </summary>
		public override Microsoft.VisualStudio.Modeling.ModelElement Create(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.ModelDataBag bag)
		{
			return new ISpySoft.SFSchemaLanguage.Designer.ViewPointShape( partition, bag );
		}
		/// <summary>
		/// Create an instance of the createor object
		/// </summary>
		public static ViewPointShapeElementFactoryCreator Instance
		{
			get
			{
				return new ViewPointShapeElementFactoryCreator();
			}
		}
	}
	#endregion

}
namespace ISpySoft.SFSchemaLanguage.Designer
{
	/// <summary>
	/// 
	/// </summary>
	[Microsoft.VisualStudio.Modeling.ShapeFor(typeof(ISpySoft.SFSchemaLanguage.DomainModel.SchemaModelItemHasSchemaModelItem))]
	[System.ComponentModel.ToolboxItemFilterAttribute(SFSchemaLanguageDiagram.DiagramFilterString, System.ComponentModel.ToolboxItemFilterType.Require)]
	[System.CLSCompliant(true)]
	[System.Serializable]
	[Microsoft.VisualStudio.Modeling.MetaClass("38bf1796-1f42-4cd4-8a05-bcd0c862442e")]
	[Microsoft.VisualStudio.Modeling.MetaObject(ISpySoft.SFSchemaLanguage.Designer.SchemaModelItemHasSchemaModelItemConnector.MetaClassGuidString, "SchemaModelItemHasSchemaModelItemConnector")]
	public  partial class SchemaModelItemHasSchemaModelItemConnector : Microsoft.VisualStudio.Modeling.Utilities.Connector
	{
		#region SchemaModelItemHasSchemaModelItemConnector's Generated Shape Code
		/// <summary>
		/// MetaClass Guid String
		/// </summary>
		public new const System.String MetaClassGuidString = "2c80ac41-2997-45db-aa20-81e2dd3f5db3";
		/// <summary>
		/// MetaClass Guid
		/// </summary>
		public static readonly new System.Guid MetaClassGuid = new System.Guid(ISpySoft.SFSchemaLanguage.Designer.SchemaModelItemHasSchemaModelItemConnector.MetaClassGuidString);
		#region Boilerplate code for every Shape-derived class
		/// <summary>
		/// Style Set
		/// </summary>
		private static Microsoft.VisualStudio.Modeling.Diagrams.StyleSet classStyleSet = null;
		/// <summary>
		/// Shape Fields
		/// </summary>
		private static Microsoft.VisualStudio.Modeling.Diagrams.ShapeFieldCollection shapeFields = null;
		/// <summary>
		/// Style Set
		/// </summary>
		protected override Microsoft.VisualStudio.Modeling.Diagrams.StyleSet ClassStyleSet
		{
			get
			{
				if (classStyleSet == null)
				{
					classStyleSet = CreateClassStyleSet();
				}
				return classStyleSet;
			}
		}
		/// <summary>
		/// Shape Fields
		/// </summary>
		public override Microsoft.VisualStudio.Modeling.Diagrams.ShapeFieldCollection ShapeFields
		{
			get
			{
				if (shapeFields == null)
				{
					shapeFields = CreateShapeFields();
				}
				return shapeFields;
			}
		}
		#endregion
		#endregion

	}
	#region SchemaModelItemHasSchemaModelItemConnector's Generated Constructor Code
	public  partial class SchemaModelItemHasSchemaModelItemConnector
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public SchemaModelItemHasSchemaModelItemConnector(Microsoft.VisualStudio.Modeling.Store store, Microsoft.VisualStudio.Modeling.ModelDataBag bag) : base(store.DefaultPartition, bag)
		{
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static SchemaModelItemHasSchemaModelItemConnector CreateSchemaModelItemHasSchemaModelItemConnector(Microsoft.VisualStudio.Modeling.Store store)
		{
			return CreateSchemaModelItemHasSchemaModelItemConnector(store.DefaultPartition);
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static SchemaModelItemHasSchemaModelItemConnector CreateAndInitializeSchemaModelItemHasSchemaModelItemConnector(Microsoft.VisualStudio.Modeling.Store store, Microsoft.VisualStudio.Modeling.AttributeAssignment[] assignments)
		{
			return CreateAndInitializeSchemaModelItemHasSchemaModelItemConnector(store.DefaultPartition, assignments);
		}
		/// <summary>
		/// Constructor
		/// </summary>
		public SchemaModelItemHasSchemaModelItemConnector(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.ModelDataBag bag)
			: base(partition, bag)
		{
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static SchemaModelItemHasSchemaModelItemConnector CreateSchemaModelItemHasSchemaModelItemConnector(Microsoft.VisualStudio.Modeling.Partition partition)
		{
			return (SchemaModelItemHasSchemaModelItemConnector)partition.ElementFactory.CreateElement(typeof(SchemaModelItemHasSchemaModelItemConnector));
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static SchemaModelItemHasSchemaModelItemConnector CreateAndInitializeSchemaModelItemHasSchemaModelItemConnector(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.AttributeAssignment[] assignments)
		{
			return (SchemaModelItemHasSchemaModelItemConnector)partition.ElementFactory.CreateElement(typeof(SchemaModelItemHasSchemaModelItemConnector), assignments);
		}
	}
	#endregion
	#region Class Factory Creator for SchemaModelItemHasSchemaModelItemConnector
	/// <summary>
	/// SchemaModelItemHasSchemaModelItemConnector Class Factory Creator
	/// </summary>
	[Microsoft.VisualStudio.Modeling.ElementFactoryCreatorFor(typeof(ISpySoft.SFSchemaLanguage.Designer.SchemaModelItemHasSchemaModelItemConnector))]
	public sealed class SchemaModelItemHasSchemaModelItemConnectorElementFactoryCreator : Microsoft.VisualStudio.Modeling.ElementFactoryCreator
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public SchemaModelItemHasSchemaModelItemConnectorElementFactoryCreator()
		{
		}
		/// <summary>
		/// Class Factory Create Method
		/// </summary>
		public override Microsoft.VisualStudio.Modeling.ModelElement Create(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.ModelDataBag bag)
		{
			return new ISpySoft.SFSchemaLanguage.Designer.SchemaModelItemHasSchemaModelItemConnector( partition, bag );
		}
		/// <summary>
		/// Create an instance of the createor object
		/// </summary>
		public static SchemaModelItemHasSchemaModelItemConnectorElementFactoryCreator Instance
		{
			get
			{
				return new SchemaModelItemHasSchemaModelItemConnectorElementFactoryCreator();
			}
		}
	}
	#endregion

}
namespace ISpySoft.SFSchemaLanguage.Designer
{
	/// <summary>
	/// 
	/// </summary>
	[Microsoft.VisualStudio.Modeling.ShapeFor(typeof(ISpySoft.SFSchemaLanguage.DomainModel.SchemaModel))]
	[System.ComponentModel.ToolboxItemFilterAttribute(SFSchemaLanguageDiagram.DiagramFilterString, System.ComponentModel.ToolboxItemFilterType.Require)]
	[System.CLSCompliant(true)]
	[System.Serializable]
	[Microsoft.VisualStudio.Modeling.MetaClass("38bf1796-1f42-4cd4-8a05-bcd0c862442e")]
	[Microsoft.VisualStudio.Modeling.MetaObject(ISpySoft.SFSchemaLanguage.Designer.SFSchemaLanguageDiagram.MetaClassGuidString, "SFSchemaLanguageDiagram")]
	public  partial class SFSchemaLanguageDiagram : Microsoft.VisualStudio.Modeling.Utilities.Diagram
	{
		#region SFSchemaLanguageDiagram's Generated Diagram Code
		/// <summary>
		/// MetaClass Guid String
		/// </summary>
		public new const System.String MetaClassGuidString = "8ccc0571-2248-4d57-a802-e94f2926cbfd";
		/// <summary>
		/// MetaClass Guid
		/// </summary>
		public static readonly new System.Guid MetaClassGuid = new System.Guid(ISpySoft.SFSchemaLanguage.Designer.SFSchemaLanguageDiagram.MetaClassGuidString);
		#region Boilerplate code for every Shape-derived class
		/// <summary>
		/// Style Set
		/// </summary>
		private static Microsoft.VisualStudio.Modeling.Diagrams.StyleSet classStyleSet = null;
		/// <summary>
		/// Shape Fields
		/// </summary>
		private static Microsoft.VisualStudio.Modeling.Diagrams.ShapeFieldCollection shapeFields = null;
		/// <summary>
		/// Style Set
		/// </summary>
		protected override Microsoft.VisualStudio.Modeling.Diagrams.StyleSet ClassStyleSet
		{
			get
			{
				if (classStyleSet == null)
				{
					classStyleSet = CreateClassStyleSet();
				}
				return classStyleSet;
			}
		}
		/// <summary>
		/// Shape Fields
		/// </summary>
		public override Microsoft.VisualStudio.Modeling.Diagrams.ShapeFieldCollection ShapeFields
		{
			get
			{
				if (shapeFields == null)
				{
					shapeFields = CreateShapeFields();
				}
				return shapeFields;
			}
		}
		#endregion
		#endregion

	}
	#region SFSchemaLanguageDiagram's Generated Constructor Code
	public  partial class SFSchemaLanguageDiagram
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public SFSchemaLanguageDiagram(Microsoft.VisualStudio.Modeling.Store store, Microsoft.VisualStudio.Modeling.ModelDataBag bag) : base(store.DefaultPartition, bag)
		{
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static SFSchemaLanguageDiagram CreateSFSchemaLanguageDiagram(Microsoft.VisualStudio.Modeling.Store store)
		{
			return CreateSFSchemaLanguageDiagram(store.DefaultPartition);
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static SFSchemaLanguageDiagram CreateAndInitializeSFSchemaLanguageDiagram(Microsoft.VisualStudio.Modeling.Store store, Microsoft.VisualStudio.Modeling.AttributeAssignment[] assignments)
		{
			return CreateAndInitializeSFSchemaLanguageDiagram(store.DefaultPartition, assignments);
		}
		/// <summary>
		/// Constructor
		/// </summary>
		public SFSchemaLanguageDiagram(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.ModelDataBag bag)
			: base(partition, bag)
		{
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static SFSchemaLanguageDiagram CreateSFSchemaLanguageDiagram(Microsoft.VisualStudio.Modeling.Partition partition)
		{
			return (SFSchemaLanguageDiagram)partition.ElementFactory.CreateElement(typeof(SFSchemaLanguageDiagram));
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static SFSchemaLanguageDiagram CreateAndInitializeSFSchemaLanguageDiagram(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.AttributeAssignment[] assignments)
		{
			return (SFSchemaLanguageDiagram)partition.ElementFactory.CreateElement(typeof(SFSchemaLanguageDiagram), assignments);
		}
	}
	#endregion
	#region Class Factory Creator for SFSchemaLanguageDiagram
	/// <summary>
	/// SFSchemaLanguageDiagram Class Factory Creator
	/// </summary>
	[Microsoft.VisualStudio.Modeling.ElementFactoryCreatorFor(typeof(ISpySoft.SFSchemaLanguage.Designer.SFSchemaLanguageDiagram))]
	public sealed class SFSchemaLanguageDiagramElementFactoryCreator : Microsoft.VisualStudio.Modeling.ElementFactoryCreator
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public SFSchemaLanguageDiagramElementFactoryCreator()
		{
		}
		/// <summary>
		/// Class Factory Create Method
		/// </summary>
		public override Microsoft.VisualStudio.Modeling.ModelElement Create(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.ModelDataBag bag)
		{
			return new ISpySoft.SFSchemaLanguage.Designer.SFSchemaLanguageDiagram( partition, bag );
		}
		/// <summary>
		/// Create an instance of the createor object
		/// </summary>
		public static SFSchemaLanguageDiagramElementFactoryCreator Instance
		{
			get
			{
				return new SFSchemaLanguageDiagramElementFactoryCreator();
			}
		}
	}
	#endregion

}


#region SubStore Partial Class To Specify Closures
namespace ISpySoft.SFSchemaLanguage.Designer
{
	#region Using directives
	using System;
	using System.Collections.Generic;
	using Microsoft.VisualStudio.Modeling;
	using Microsoft.VisualStudio.Modeling.Diagrams;
	using Microsoft.VisualStudio.Modeling.Utilities;
	#endregion

	public  partial class SFSchemaLanguageDesigner
	{
		/// <summary>
		/// CopyClosure cache
		/// </summary>
		private static Microsoft.VisualStudio.Modeling.IElementVisitorFilter copyClosureMember;
		/// <summary>
		/// RemoveClosure cache
		/// </summary>
		private static Microsoft.VisualStudio.Modeling.IElementVisitorFilter removeClosureMember;
		/// <summary>
		/// Returns an IElementVisitorFilter that corresponds to the ClosureType.
		/// </summary>
		/// <param name="type">closure type</param>
		/// <param name="rootElements">collection of root elements</param>
		/// <returns>IElementVisitorFilter or null</returns>
		public override Microsoft.VisualStudio.Modeling.IElementVisitorFilter GetClosureFilter(Microsoft.VisualStudio.Modeling.ClosureType type, System.Collections.ICollection rootElements)
		{
			switch (type)
			{
				case Microsoft.VisualStudio.Modeling.ClosureType.CopyClosure:
					return SFSchemaLanguageDesigner.CopyClosure;
				case Microsoft.VisualStudio.Modeling.ClosureType.RemoveClosure:
					return SFSchemaLanguageDesigner.RemoveClosure;
			}
			return base.GetClosureFilter(type, rootElements);
		}
		/// <summary>
		/// CopyClosure cache
		/// </summary>
		private static IElementVisitorFilter CopyClosure
		{
			get
			{
				// Incorporate all of the closures from the models we extend
				if (SFSchemaLanguageDesigner.copyClosureMember == null)
				{
					ChainingElementVisitorFilter copyFilter = new ChainingElementVisitorFilter();
										copyFilter.AddFilter(new CoreMetaModelCopyFilter(false));
					copyFilter.AddFilter(new CoreDesignSurfaceMetaModelCopyFilter());
					copyFilter.AddFilter(new UtilitiesCopyClosure());
					copyFilter.AddFilter(new SFSchemaLanguageDesignerCopyClosure());
					
					SFSchemaLanguageDesigner.copyClosureMember = copyFilter;
				}
				return SFSchemaLanguageDesigner.copyClosureMember;
			}
		}
		/// <summary>
		/// RemoveClosure cache
		/// </summary>
		private static IElementVisitorFilter RemoveClosure
		{
			get
			{
				// Incorporate all of the closures from the models we extend
				if (SFSchemaLanguageDesigner.removeClosureMember == null)
				{
					ChainingElementVisitorFilter removeFilter = new ChainingElementVisitorFilter();
										removeFilter.AddFilter(new CoreMetaModelRemoveFilter(false));
					removeFilter.AddFilter(new CoreDesignSurfaceMetaModelRemoveFilter());
					removeFilter.AddFilter(new UtilitiesRemoveClosure());
					removeFilter.AddFilter(new SFSchemaLanguageDesignerRemoveClosure());

					SFSchemaLanguageDesigner.removeClosureMember = removeFilter;
				}
				return SFSchemaLanguageDesigner.removeClosureMember;
			}
		}
	}
}
#endregion

