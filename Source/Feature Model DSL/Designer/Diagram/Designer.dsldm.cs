//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ISpySoft.FeatureModelLanguage.Designer
{
	/// <summary>
	/// 
	/// </summary>
	[Microsoft.VisualStudio.Modeling.InheritBaseModel("8dccb20a-ba4c-4f0e-97af-3d5101eb3e71")]
	[Microsoft.VisualStudio.Modeling.InheritBaseModel("91d59b16-e488-4a28-8d51-59273ad5bf2e")]
	[System.CLSCompliant(true)]
	[System.Serializable]
	[Microsoft.VisualStudio.Modeling.MetaObject(ISpySoft.FeatureModelLanguage.Designer.FeatureModelLanguageDesigner.MetaModelGuidString, "FeatureModelLanguageDesigner")]
	public  partial class FeatureModelLanguageDesigner : Microsoft.VisualStudio.Modeling.SubStore
	{
		#region FeatureModelLanguageDesigner's Generated MetaClass Code
		/// <summary>
		/// MetaModel Guid String
		/// </summary>
		public const System.String MetaModelGuidString = "2cc9d4db-8656-4a6f-bc05-00ecc76e3a5f";
		/// <summary>
		/// MetaModel Guid
		/// </summary>
		public static readonly System.Guid MetaModelGuid = new System.Guid(ISpySoft.FeatureModelLanguage.Designer.FeatureModelLanguageDesigner.MetaModelGuidString);
		/// <summary>
		/// Default Constructor called by the IMS -- do not call directly
		/// </summary>
		public FeatureModelLanguageDesigner() : base()
		{
		}
		/// <summary>
		/// Constructor
		/// </summary>
		public FeatureModelLanguageDesigner(Microsoft.VisualStudio.Modeling.Store store) : base(store.DefaultPartition, ISpySoft.FeatureModelLanguage.Designer.FeatureModelLanguageDesigner.MetaModelGuid)
		{
		}
		/// <summary>
		/// Constructor
		/// </summary>
		public FeatureModelLanguageDesigner(Microsoft.VisualStudio.Modeling.Partition partition) : base(partition, ISpySoft.FeatureModelLanguage.Designer.FeatureModelLanguageDesigner.MetaModelGuid)
		{
		}
		#endregion

	}
	#region FeatureModelLanguageDesigner's ResourceManager Code
	public  partial class FeatureModelLanguageDesigner
	{
		private static System.Resources.ResourceManager resourceManager = null;
		/// <summary>
		/// The base name of this models resources.
		/// </summary>
		public const string ResourceBaseName = "ISpySoft.FeatureModelLanguage.Designer.Diagram.Designer.Resource";
		/// <summary>
		/// Returns the SubStore's ResourceManager. If the ResourceManager does not already exist, then it is created.
		/// </summary>
		public override System.Resources.ResourceManager ResourceManager
		{
			get
			{
				return ISpySoft.FeatureModelLanguage.Designer.FeatureModelLanguageDesigner.SingletonResourceManager;
			}
		}
		/// <summary>
		/// A internal object used for synchronization.
		/// </summary>
		private static object internalSyncObject;
		/// <summary>
		/// Gets the internal object used for synchronization.
		/// </summary>
		private static object InternalSyncObject 
		{
			get 
			{
				if (internalSyncObject == null) 
				{
					object o = new object();
					System.Threading.Interlocked.CompareExchange(ref internalSyncObject, o, null);
				}
				return internalSyncObject;
			}
		}
		/// <summary>
		/// Gets the Singleton ResourceManager for this SubStore
		/// </summary>
		public static System.Resources.ResourceManager SingletonResourceManager
		{
			get
			{
				if (ISpySoft.FeatureModelLanguage.Designer.FeatureModelLanguageDesigner.resourceManager == null)
				{
					lock (ISpySoft.FeatureModelLanguage.Designer.FeatureModelLanguageDesigner.InternalSyncObject)
					{
						if (ISpySoft.FeatureModelLanguage.Designer.FeatureModelLanguageDesigner.resourceManager == null)
						{
							ISpySoft.FeatureModelLanguage.Designer.FeatureModelLanguageDesigner.resourceManager = new System.Resources.ResourceManager(ResourceBaseName, typeof(ISpySoft.FeatureModelLanguage.Designer.FeatureModelLanguageDesigner).Assembly);
						}
					}
				}
				return ISpySoft.FeatureModelLanguage.Designer.FeatureModelLanguageDesigner.resourceManager;
			}
		}
	}
	#endregion
	/// <summary>
	/// Copy closure visitor filter
	/// </summary>
	[System.CLSCompliant(true)]
	[System.Serializable]
	public  class FeatureModelLanguageDesignerCopyClosure : Microsoft.VisualStudio.Modeling.IElementVisitorFilter
	{
		/// <summary>
		/// MetaRoles
		/// </summary>
		private System.Collections.Generic.Dictionary<System.Guid, System.Guid> metaRolesMember;
		/// <summary>
		/// Constructor
		/// </summary>
		public FeatureModelLanguageDesignerCopyClosure()
		{
			#region Initialize MetaData Table
			#endregion
		}
		/// <summary>
		/// Called to ask the filter if a particular relationship from a source element should be included in the traversal
		/// </summary>
		/// <param name="walker">ElementWalker traversing the model</param>
		/// <param name="sourceElement">Model Element playing the source role</param>
		/// <param name="sourceRoleInfo">MetaRoleInfo of the role that the source element is playing in the relationship</param>
		/// <param name="metaRelationshipInfo">MetaRelationshipInfo for the ElementLink in question</param>
		/// <param name="targetRelationship">Relationship in question</param>
		/// <returns>Yes if the relationship should be traversed</returns>
		public virtual Microsoft.VisualStudio.Modeling.VisitorFilterResult ShouldVisitRelationship(Microsoft.VisualStudio.Modeling.ElementWalker walker, Microsoft.VisualStudio.Modeling.ModelElement sourceElement, Microsoft.VisualStudio.Modeling.MetaRoleInfo sourceRoleInfo, Microsoft.VisualStudio.Modeling.MetaRelationshipInfo metaRelationshipInfo, Microsoft.VisualStudio.Modeling.ElementLink targetRelationship)
		{
			return this.MetaRoles.ContainsKey(sourceRoleInfo.Id) ? Microsoft.VisualStudio.Modeling.VisitorFilterResult.Yes : Microsoft.VisualStudio.Modeling.VisitorFilterResult.DoNotCare;
		}
		/// <summary>
		/// Called to ask the filter if a particular role player should be Visited during traversal
		/// </summary>
		/// <param name="walker">ElementWalker traversing the model</param>
		/// <param name="sourceElement">Model Element playing the source role</param>
		/// <param name="elementLink">Element Link that forms the relationship to the role player in question</param>
		/// <param name="targetRoleInfo">MetaRoleInfo of the target role</param>
		/// <param name="targetRolePlayer">Model Element that plays the target role in the relationship</param>
		/// <returns></returns>
		public virtual Microsoft.VisualStudio.Modeling.VisitorFilterResult ShouldVisitRolePlayer(Microsoft.VisualStudio.Modeling.ElementWalker walker, Microsoft.VisualStudio.Modeling.ModelElement sourceElement, Microsoft.VisualStudio.Modeling.ElementLink elementLink, Microsoft.VisualStudio.Modeling.MetaRoleInfo targetRoleInfo, Microsoft.VisualStudio.Modeling.ModelElement targetRolePlayer)
		{
			foreach (Microsoft.VisualStudio.Modeling.MetaRoleInfo metaRoleInfo in elementLink.MetaRelationship.MetaRoles)
			{
				if (metaRoleInfo != targetRoleInfo && this.MetaRoles.ContainsKey(metaRoleInfo.Id))
				{
					return Microsoft.VisualStudio.Modeling.VisitorFilterResult.Yes;
				}
			}
			return Microsoft.VisualStudio.Modeling.VisitorFilterResult.DoNotCare;
		}
		/// <summary>
		/// MetaRoles
		/// </summary>
		private System.Collections.Generic.Dictionary<System.Guid, System.Guid> MetaRoles
		{
			get
			{
				if (this.metaRolesMember == null)
				{
					this.metaRolesMember = new System.Collections.Generic.Dictionary<System.Guid, System.Guid>();
				}
				return this.metaRolesMember;
			}
		}

	}
	/// <summary>
	/// Remove closure visitor filter
	/// </summary>
	[System.CLSCompliant(true)]
	[System.Serializable]
	public  class FeatureModelLanguageDesignerRemoveClosure : Microsoft.VisualStudio.Modeling.IElementVisitorFilter
	{
		/// <summary>
		/// MetaRoles
		/// </summary>
		private System.Collections.Generic.Dictionary<System.Guid, System.Guid> metaRolesMember;
		/// <summary>
		/// Constructor
		/// </summary>
		public FeatureModelLanguageDesignerRemoveClosure()
		{
			#region Initialize MetaData Table
			#endregion
		}
		/// <summary>
		/// Called to ask the filter if a particular relationship from a source element should be included in the traversal
		/// </summary>
		/// <param name="walker">ElementWalker that is traversing the model</param>
		/// <param name="sourceElement">Model Element playing the source role</param>
		/// <param name="sourceRoleInfo">MetaRoleInfo of the role that the source element is playing in the relationship</param>
		/// <param name="metaRelationshipInfo">MetaRelationshipInfo for the ElementLink in question</param>
		/// <param name="targetRelationship">Relationship in question</param>
		/// <returns>Yes if the relationship should be traversed</returns>
		public virtual Microsoft.VisualStudio.Modeling.VisitorFilterResult ShouldVisitRelationship(Microsoft.VisualStudio.Modeling.ElementWalker walker, Microsoft.VisualStudio.Modeling.ModelElement sourceElement, Microsoft.VisualStudio.Modeling.MetaRoleInfo sourceRoleInfo, Microsoft.VisualStudio.Modeling.MetaRelationshipInfo metaRelationshipInfo, Microsoft.VisualStudio.Modeling.ElementLink targetRelationship)
		{
			return Microsoft.VisualStudio.Modeling.VisitorFilterResult.Yes;
		}
		/// <summary>
		/// Called to ask the filter if a particular role player should be Visited during traversal
		/// </summary>
		/// <param name="walker">ElementWalker that is traversing the model</param>
		/// <param name="sourceElement">Model Element playing the source role</param>
		/// <param name="elementLink">Element Link that forms the relationship to the role player in question</param>
		/// <param name="targetRoleInfo">MetaRoleInfo of the target role</param>
		/// <param name="targetRolePlayer">Model Element that plays the target role in the relationship</param>
		/// <returns></returns>
		public virtual Microsoft.VisualStudio.Modeling.VisitorFilterResult ShouldVisitRolePlayer(Microsoft.VisualStudio.Modeling.ElementWalker walker, Microsoft.VisualStudio.Modeling.ModelElement sourceElement, Microsoft.VisualStudio.Modeling.ElementLink elementLink, Microsoft.VisualStudio.Modeling.MetaRoleInfo targetRoleInfo, Microsoft.VisualStudio.Modeling.ModelElement targetRolePlayer)
		{
			return this.MetaRoles.ContainsKey(targetRoleInfo.Id) ? Microsoft.VisualStudio.Modeling.VisitorFilterResult.Yes : Microsoft.VisualStudio.Modeling.VisitorFilterResult.DoNotCare;
		}
		/// <summary>
		/// MetaRoles
		/// </summary>
		private System.Collections.Generic.Dictionary<System.Guid, System.Guid> MetaRoles
		{
			get
			{
				if (this.metaRolesMember == null)
				{
					this.metaRolesMember = new System.Collections.Generic.Dictionary<System.Guid, System.Guid>();
				}
				return this.metaRolesMember;
			}
		}

	}
	/// <summary>
	/// 
	/// </summary>
	public  partial class FeatureModelLanguageDesigner : Microsoft.VisualStudio.Modeling.SubStore
	{
		#region FeatureModelLanguageDesigner's AllGeneratedMetaModelTypes Code
		/// <summary>
		/// Virtual method that returns a collection of all types for metamodel 
		/// </summary>
		protected sealed override System.Type[] AllGeneratedMetaModelTypes()
		{
			System.Type[] typeArray = new System.Type[]
			{
				typeof(ISpySoft.FeatureModelLanguage.Designer.FeatureModelLanguageDesigner),
				typeof(ISpySoft.FeatureModelLanguage.Designer.FeatureSetShape),
				typeof(ISpySoft.FeatureModelLanguage.Designer.FeatureSetShapeElementFactoryCreator),
				typeof(ISpySoft.FeatureModelLanguage.Designer.FeatureShape),
				typeof(ISpySoft.FeatureModelLanguage.Designer.FeatureShapeElementFactoryCreator),
				typeof(ISpySoft.FeatureModelLanguage.Designer.RootFeatureShape),
				typeof(ISpySoft.FeatureModelLanguage.Designer.RootFeatureShapeElementFactoryCreator),
				typeof(ISpySoft.FeatureModelLanguage.Designer.RelationshipFeatureConnector),
				typeof(ISpySoft.FeatureModelLanguage.Designer.RelationshipFeatureConnectorElementFactoryCreator),
				typeof(ISpySoft.FeatureModelLanguage.Designer.RelationshipFeatureSetConnector),
				typeof(ISpySoft.FeatureModelLanguage.Designer.RelationshipFeatureSetConnectorElementFactoryCreator),
				typeof(ISpySoft.FeatureModelLanguage.Designer.FeatureModelLanguageDiagram),
				typeof(ISpySoft.FeatureModelLanguage.Designer.FeatureModelLanguageDiagramElementFactoryCreator),

			};
			return typeArray;
		}
		#endregion
	}
}
namespace ISpySoft.FeatureModelLanguage.Designer
{
	/// <summary>
	/// 
	/// </summary>
	[Microsoft.VisualStudio.Modeling.ShapeFor(typeof(ISpySoft.FeatureModelLanguage.DomainModel.FeatureSet))]
	[System.ComponentModel.ToolboxItemFilterAttribute(FeatureModelLanguageDiagram.DiagramFilterString, System.ComponentModel.ToolboxItemFilterType.Require)]
	
	[Microsoft.VisualStudio.Modeling.MetaToolboxItem("FeatureModelLanguageDiagramFeatureSetShape", 2, "FeatureSet", "FeatureSetCaption", "FeatureSetCaption", "ToolboxTab", ContextSensitiveHelpKeywordId="FeatureSetHelpId")][System.CLSCompliant(true)]
	[System.Serializable]
	[Microsoft.VisualStudio.Modeling.MetaClass("2cc9d4db-8656-4a6f-bc05-00ecc76e3a5f")]
	[Microsoft.VisualStudio.Modeling.MetaObject(ISpySoft.FeatureModelLanguage.Designer.FeatureSetShape.MetaClassGuidString, "FeatureSetShape")]
	public  partial class FeatureSetShape : Microsoft.VisualStudio.Modeling.Utilities.ImageShape
	{
		#region FeatureSetShape's Generated Shape Code
		/// <summary>
		/// MetaClass Guid String
		/// </summary>
		public new const System.String MetaClassGuidString = "89dbc5d0-8631-437d-b9a9-5ec59d3c266d";
		/// <summary>
		/// MetaClass Guid
		/// </summary>
		public static readonly new System.Guid MetaClassGuid = new System.Guid(ISpySoft.FeatureModelLanguage.Designer.FeatureSetShape.MetaClassGuidString);
		#region Boilerplate code for every Shape-derived class
		/// <summary>
		/// Style Set
		/// </summary>
		private static Microsoft.VisualStudio.Modeling.Diagrams.StyleSet classStyleSet = null;
		/// <summary>
		/// Shape Fields
		/// </summary>
		private static Microsoft.VisualStudio.Modeling.Diagrams.ShapeFieldCollection shapeFields = null;
		/// <summary>
		/// Style Set
		/// </summary>
		protected override Microsoft.VisualStudio.Modeling.Diagrams.StyleSet ClassStyleSet
		{
			get
			{
				if (classStyleSet == null)
				{
					classStyleSet = CreateClassStyleSet();
				}
				return classStyleSet;
			}
		}
		/// <summary>
		/// Shape Fields
		/// </summary>
		public override Microsoft.VisualStudio.Modeling.Diagrams.ShapeFieldCollection ShapeFields
		{
			get
			{
				if (shapeFields == null)
				{
					shapeFields = CreateShapeFields();
				}
				return shapeFields;
			}
		}
		#endregion
		#endregion

	}
	#region FeatureSetShape's Generated Constructor Code
	public  partial class FeatureSetShape
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public FeatureSetShape(Microsoft.VisualStudio.Modeling.Store store, Microsoft.VisualStudio.Modeling.ModelDataBag bag) : base(store.DefaultPartition, bag)
		{
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static FeatureSetShape CreateFeatureSetShape(Microsoft.VisualStudio.Modeling.Store store)
		{
			return CreateFeatureSetShape(store.DefaultPartition);
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static FeatureSetShape CreateAndInitializeFeatureSetShape(Microsoft.VisualStudio.Modeling.Store store, Microsoft.VisualStudio.Modeling.AttributeAssignment[] assignments)
		{
			return CreateAndInitializeFeatureSetShape(store.DefaultPartition, assignments);
		}
		/// <summary>
		/// Constructor
		/// </summary>
		public FeatureSetShape(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.ModelDataBag bag)
			: base(partition, bag)
		{
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static FeatureSetShape CreateFeatureSetShape(Microsoft.VisualStudio.Modeling.Partition partition)
		{
			return (FeatureSetShape)partition.ElementFactory.CreateElement(typeof(FeatureSetShape));
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static FeatureSetShape CreateAndInitializeFeatureSetShape(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.AttributeAssignment[] assignments)
		{
			return (FeatureSetShape)partition.ElementFactory.CreateElement(typeof(FeatureSetShape), assignments);
		}
	}
	#endregion
	#region Class Factory Creator for FeatureSetShape
	/// <summary>
	/// FeatureSetShape Class Factory Creator
	/// </summary>
	[Microsoft.VisualStudio.Modeling.ElementFactoryCreatorFor(typeof(ISpySoft.FeatureModelLanguage.Designer.FeatureSetShape))]
	public sealed class FeatureSetShapeElementFactoryCreator : Microsoft.VisualStudio.Modeling.ElementFactoryCreator
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public FeatureSetShapeElementFactoryCreator()
		{
		}
		/// <summary>
		/// Class Factory Create Method
		/// </summary>
		public override Microsoft.VisualStudio.Modeling.ModelElement Create(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.ModelDataBag bag)
		{
			return new ISpySoft.FeatureModelLanguage.Designer.FeatureSetShape( partition, bag );
		}
		/// <summary>
		/// Create an instance of the createor object
		/// </summary>
		public static FeatureSetShapeElementFactoryCreator Instance
		{
			get
			{
				return new FeatureSetShapeElementFactoryCreator();
			}
		}
	}
	#endregion

}
namespace ISpySoft.FeatureModelLanguage.Designer
{
	/// <summary>
	/// 
	/// </summary>
	[Microsoft.VisualStudio.Modeling.ShapeFor(typeof(ISpySoft.FeatureModelLanguage.DomainModel.Feature))]
	[System.ComponentModel.ToolboxItemFilterAttribute(FeatureModelLanguageDiagram.DiagramFilterString, System.ComponentModel.ToolboxItemFilterType.Require)]
	
	[Microsoft.VisualStudio.Modeling.MetaToolboxItem("FeatureModelLanguageDiagramFeatureShape", 1, "Feature", "FeatureCaption", "FeatureCaption", "ToolboxTab", ContextSensitiveHelpKeywordId="FeatureHelpId")][System.CLSCompliant(true)]
	[System.Serializable]
	[Microsoft.VisualStudio.Modeling.MetaClass("2cc9d4db-8656-4a6f-bc05-00ecc76e3a5f")]
	[Microsoft.VisualStudio.Modeling.MetaObject(ISpySoft.FeatureModelLanguage.Designer.FeatureShape.MetaClassGuidString, "FeatureShape")]
	public  partial class FeatureShape : Microsoft.VisualStudio.Modeling.Utilities.GeometryShape
	{
		#region FeatureShape's Generated Shape Code
		/// <summary>
		/// MetaClass Guid String
		/// </summary>
		public new const System.String MetaClassGuidString = "52802d3c-f5d4-4341-a6ec-8e4d2c4cbe86";
		/// <summary>
		/// MetaClass Guid
		/// </summary>
		public static readonly new System.Guid MetaClassGuid = new System.Guid(ISpySoft.FeatureModelLanguage.Designer.FeatureShape.MetaClassGuidString);
		#region Boilerplate code for every Shape-derived class
		/// <summary>
		/// Style Set
		/// </summary>
		private static Microsoft.VisualStudio.Modeling.Diagrams.StyleSet classStyleSet = null;
		/// <summary>
		/// Shape Fields
		/// </summary>
		private static Microsoft.VisualStudio.Modeling.Diagrams.ShapeFieldCollection shapeFields = null;
		/// <summary>
		/// Style Set
		/// </summary>
		protected override Microsoft.VisualStudio.Modeling.Diagrams.StyleSet ClassStyleSet
		{
			get
			{
				if (classStyleSet == null)
				{
					classStyleSet = CreateClassStyleSet();
				}
				return classStyleSet;
			}
		}
		/// <summary>
		/// Shape Fields
		/// </summary>
		public override Microsoft.VisualStudio.Modeling.Diagrams.ShapeFieldCollection ShapeFields
		{
			get
			{
				if (shapeFields == null)
				{
					shapeFields = CreateShapeFields();
				}
				return shapeFields;
			}
		}
		#endregion
		#endregion

	}
	#region FeatureShape's Generated Constructor Code
	public  partial class FeatureShape
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public FeatureShape(Microsoft.VisualStudio.Modeling.Store store, Microsoft.VisualStudio.Modeling.ModelDataBag bag) : base(store.DefaultPartition, bag)
		{
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static FeatureShape CreateFeatureShape(Microsoft.VisualStudio.Modeling.Store store)
		{
			return CreateFeatureShape(store.DefaultPartition);
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static FeatureShape CreateAndInitializeFeatureShape(Microsoft.VisualStudio.Modeling.Store store, Microsoft.VisualStudio.Modeling.AttributeAssignment[] assignments)
		{
			return CreateAndInitializeFeatureShape(store.DefaultPartition, assignments);
		}
		/// <summary>
		/// Constructor
		/// </summary>
		public FeatureShape(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.ModelDataBag bag)
			: base(partition, bag)
		{
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static FeatureShape CreateFeatureShape(Microsoft.VisualStudio.Modeling.Partition partition)
		{
			return (FeatureShape)partition.ElementFactory.CreateElement(typeof(FeatureShape));
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static FeatureShape CreateAndInitializeFeatureShape(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.AttributeAssignment[] assignments)
		{
			return (FeatureShape)partition.ElementFactory.CreateElement(typeof(FeatureShape), assignments);
		}
	}
	#endregion
	#region Class Factory Creator for FeatureShape
	/// <summary>
	/// FeatureShape Class Factory Creator
	/// </summary>
	[Microsoft.VisualStudio.Modeling.ElementFactoryCreatorFor(typeof(ISpySoft.FeatureModelLanguage.Designer.FeatureShape))]
	public sealed class FeatureShapeElementFactoryCreator : Microsoft.VisualStudio.Modeling.ElementFactoryCreator
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public FeatureShapeElementFactoryCreator()
		{
		}
		/// <summary>
		/// Class Factory Create Method
		/// </summary>
		public override Microsoft.VisualStudio.Modeling.ModelElement Create(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.ModelDataBag bag)
		{
			return new ISpySoft.FeatureModelLanguage.Designer.FeatureShape( partition, bag );
		}
		/// <summary>
		/// Create an instance of the createor object
		/// </summary>
		public static FeatureShapeElementFactoryCreator Instance
		{
			get
			{
				return new FeatureShapeElementFactoryCreator();
			}
		}
	}
	#endregion

}
namespace ISpySoft.FeatureModelLanguage.Designer
{
	/// <summary>
	/// 
	/// </summary>
	[Microsoft.VisualStudio.Modeling.ShapeFor(typeof(ISpySoft.FeatureModelLanguage.DomainModel.RootFeature))]
	[System.ComponentModel.ToolboxItemFilterAttribute(FeatureModelLanguageDiagram.DiagramFilterString, System.ComponentModel.ToolboxItemFilterType.Require)]
	
	[Microsoft.VisualStudio.Modeling.MetaToolboxItem("FeatureModelLanguageDiagramRootFeatureShape", 0, "RootFeature", "RootFeatureCaption", "RootFeatureCaption", "ToolboxTab", ContextSensitiveHelpKeywordId="RootFeatureHelpId")][System.CLSCompliant(true)]
	[System.Serializable]
	[Microsoft.VisualStudio.Modeling.MetaClass("2cc9d4db-8656-4a6f-bc05-00ecc76e3a5f")]
	[Microsoft.VisualStudio.Modeling.MetaObject(ISpySoft.FeatureModelLanguage.Designer.RootFeatureShape.MetaClassGuidString, "RootFeatureShape")]
	public  partial class RootFeatureShape : Microsoft.VisualStudio.Modeling.Utilities.GeometryShape
	{
		#region RootFeatureShape's Generated Shape Code
		/// <summary>
		/// MetaClass Guid String
		/// </summary>
		public new const System.String MetaClassGuidString = "720e8884-c853-4763-9fe8-ace354a0c9a2";
		/// <summary>
		/// MetaClass Guid
		/// </summary>
		public static readonly new System.Guid MetaClassGuid = new System.Guid(ISpySoft.FeatureModelLanguage.Designer.RootFeatureShape.MetaClassGuidString);
		#region Boilerplate code for every Shape-derived class
		/// <summary>
		/// Style Set
		/// </summary>
		private static Microsoft.VisualStudio.Modeling.Diagrams.StyleSet classStyleSet = null;
		/// <summary>
		/// Shape Fields
		/// </summary>
		private static Microsoft.VisualStudio.Modeling.Diagrams.ShapeFieldCollection shapeFields = null;
		/// <summary>
		/// Style Set
		/// </summary>
		protected override Microsoft.VisualStudio.Modeling.Diagrams.StyleSet ClassStyleSet
		{
			get
			{
				if (classStyleSet == null)
				{
					classStyleSet = CreateClassStyleSet();
				}
				return classStyleSet;
			}
		}
		/// <summary>
		/// Shape Fields
		/// </summary>
		public override Microsoft.VisualStudio.Modeling.Diagrams.ShapeFieldCollection ShapeFields
		{
			get
			{
				if (shapeFields == null)
				{
					shapeFields = CreateShapeFields();
				}
				return shapeFields;
			}
		}
		#endregion
		#endregion

	}
	#region RootFeatureShape's Generated Constructor Code
	public  partial class RootFeatureShape
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public RootFeatureShape(Microsoft.VisualStudio.Modeling.Store store, Microsoft.VisualStudio.Modeling.ModelDataBag bag) : base(store.DefaultPartition, bag)
		{
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static RootFeatureShape CreateRootFeatureShape(Microsoft.VisualStudio.Modeling.Store store)
		{
			return CreateRootFeatureShape(store.DefaultPartition);
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static RootFeatureShape CreateAndInitializeRootFeatureShape(Microsoft.VisualStudio.Modeling.Store store, Microsoft.VisualStudio.Modeling.AttributeAssignment[] assignments)
		{
			return CreateAndInitializeRootFeatureShape(store.DefaultPartition, assignments);
		}
		/// <summary>
		/// Constructor
		/// </summary>
		public RootFeatureShape(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.ModelDataBag bag)
			: base(partition, bag)
		{
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static RootFeatureShape CreateRootFeatureShape(Microsoft.VisualStudio.Modeling.Partition partition)
		{
			return (RootFeatureShape)partition.ElementFactory.CreateElement(typeof(RootFeatureShape));
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static RootFeatureShape CreateAndInitializeRootFeatureShape(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.AttributeAssignment[] assignments)
		{
			return (RootFeatureShape)partition.ElementFactory.CreateElement(typeof(RootFeatureShape), assignments);
		}
	}
	#endregion
	#region Class Factory Creator for RootFeatureShape
	/// <summary>
	/// RootFeatureShape Class Factory Creator
	/// </summary>
	[Microsoft.VisualStudio.Modeling.ElementFactoryCreatorFor(typeof(ISpySoft.FeatureModelLanguage.Designer.RootFeatureShape))]
	public sealed class RootFeatureShapeElementFactoryCreator : Microsoft.VisualStudio.Modeling.ElementFactoryCreator
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public RootFeatureShapeElementFactoryCreator()
		{
		}
		/// <summary>
		/// Class Factory Create Method
		/// </summary>
		public override Microsoft.VisualStudio.Modeling.ModelElement Create(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.ModelDataBag bag)
		{
			return new ISpySoft.FeatureModelLanguage.Designer.RootFeatureShape( partition, bag );
		}
		/// <summary>
		/// Create an instance of the createor object
		/// </summary>
		public static RootFeatureShapeElementFactoryCreator Instance
		{
			get
			{
				return new RootFeatureShapeElementFactoryCreator();
			}
		}
	}
	#endregion

}
namespace ISpySoft.FeatureModelLanguage.Designer
{
	/// <summary>
	/// 
	/// </summary>
	[Microsoft.VisualStudio.Modeling.ShapeFor(typeof(ISpySoft.FeatureModelLanguage.DomainModel.RelationshipFeature))]
	[System.ComponentModel.ToolboxItemFilterAttribute(FeatureModelLanguageDiagram.DiagramFilterString, System.ComponentModel.ToolboxItemFilterType.Require)]
	[System.CLSCompliant(true)]
	[System.Serializable]
	[Microsoft.VisualStudio.Modeling.MetaClass("2cc9d4db-8656-4a6f-bc05-00ecc76e3a5f")]
	[Microsoft.VisualStudio.Modeling.MetaObject(ISpySoft.FeatureModelLanguage.Designer.RelationshipFeatureConnector.MetaClassGuidString, "RelationshipFeatureConnector")]
	public  partial class RelationshipFeatureConnector : Microsoft.VisualStudio.Modeling.Utilities.Connector
	{
		#region RelationshipFeatureConnector's Generated Shape Code
		/// <summary>
		/// MetaClass Guid String
		/// </summary>
		public new const System.String MetaClassGuidString = "1985d4dc-5d4d-4a31-bf2b-4c2eaa4406a6";
		/// <summary>
		/// MetaClass Guid
		/// </summary>
		public static readonly new System.Guid MetaClassGuid = new System.Guid(ISpySoft.FeatureModelLanguage.Designer.RelationshipFeatureConnector.MetaClassGuidString);
		#region Boilerplate code for every Shape-derived class
		/// <summary>
		/// Style Set
		/// </summary>
		private static Microsoft.VisualStudio.Modeling.Diagrams.StyleSet classStyleSet = null;
		/// <summary>
		/// Shape Fields
		/// </summary>
		private static Microsoft.VisualStudio.Modeling.Diagrams.ShapeFieldCollection shapeFields = null;
		/// <summary>
		/// Style Set
		/// </summary>
		protected override Microsoft.VisualStudio.Modeling.Diagrams.StyleSet ClassStyleSet
		{
			get
			{
				if (classStyleSet == null)
				{
					classStyleSet = CreateClassStyleSet();
				}
				return classStyleSet;
			}
		}
		/// <summary>
		/// Shape Fields
		/// </summary>
		public override Microsoft.VisualStudio.Modeling.Diagrams.ShapeFieldCollection ShapeFields
		{
			get
			{
				if (shapeFields == null)
				{
					shapeFields = CreateShapeFields();
				}
				return shapeFields;
			}
		}
		#endregion
		#endregion

	}
	#region RelationshipFeatureConnector's Generated Constructor Code
	public  partial class RelationshipFeatureConnector
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public RelationshipFeatureConnector(Microsoft.VisualStudio.Modeling.Store store, Microsoft.VisualStudio.Modeling.ModelDataBag bag) : base(store.DefaultPartition, bag)
		{
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static RelationshipFeatureConnector CreateRelationshipFeatureConnector(Microsoft.VisualStudio.Modeling.Store store)
		{
			return CreateRelationshipFeatureConnector(store.DefaultPartition);
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static RelationshipFeatureConnector CreateAndInitializeRelationshipFeatureConnector(Microsoft.VisualStudio.Modeling.Store store, Microsoft.VisualStudio.Modeling.AttributeAssignment[] assignments)
		{
			return CreateAndInitializeRelationshipFeatureConnector(store.DefaultPartition, assignments);
		}
		/// <summary>
		/// Constructor
		/// </summary>
		public RelationshipFeatureConnector(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.ModelDataBag bag)
			: base(partition, bag)
		{
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static RelationshipFeatureConnector CreateRelationshipFeatureConnector(Microsoft.VisualStudio.Modeling.Partition partition)
		{
			return (RelationshipFeatureConnector)partition.ElementFactory.CreateElement(typeof(RelationshipFeatureConnector));
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static RelationshipFeatureConnector CreateAndInitializeRelationshipFeatureConnector(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.AttributeAssignment[] assignments)
		{
			return (RelationshipFeatureConnector)partition.ElementFactory.CreateElement(typeof(RelationshipFeatureConnector), assignments);
		}
	}
	#endregion
	#region Class Factory Creator for RelationshipFeatureConnector
	/// <summary>
	/// RelationshipFeatureConnector Class Factory Creator
	/// </summary>
	[Microsoft.VisualStudio.Modeling.ElementFactoryCreatorFor(typeof(ISpySoft.FeatureModelLanguage.Designer.RelationshipFeatureConnector))]
	public sealed class RelationshipFeatureConnectorElementFactoryCreator : Microsoft.VisualStudio.Modeling.ElementFactoryCreator
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public RelationshipFeatureConnectorElementFactoryCreator()
		{
		}
		/// <summary>
		/// Class Factory Create Method
		/// </summary>
		public override Microsoft.VisualStudio.Modeling.ModelElement Create(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.ModelDataBag bag)
		{
			return new ISpySoft.FeatureModelLanguage.Designer.RelationshipFeatureConnector( partition, bag );
		}
		/// <summary>
		/// Create an instance of the createor object
		/// </summary>
		public static RelationshipFeatureConnectorElementFactoryCreator Instance
		{
			get
			{
				return new RelationshipFeatureConnectorElementFactoryCreator();
			}
		}
	}
	#endregion

}
namespace ISpySoft.FeatureModelLanguage.Designer
{
	/// <summary>
	/// 
	/// </summary>
	[Microsoft.VisualStudio.Modeling.ShapeFor(typeof(ISpySoft.FeatureModelLanguage.DomainModel.RelationshipFeatureSet))]
	[System.ComponentModel.ToolboxItemFilterAttribute(FeatureModelLanguageDiagram.DiagramFilterString, System.ComponentModel.ToolboxItemFilterType.Require)]
	[System.CLSCompliant(true)]
	[System.Serializable]
	[Microsoft.VisualStudio.Modeling.MetaClass("2cc9d4db-8656-4a6f-bc05-00ecc76e3a5f")]
	[Microsoft.VisualStudio.Modeling.MetaObject(ISpySoft.FeatureModelLanguage.Designer.RelationshipFeatureSetConnector.MetaClassGuidString, "RelationshipFeatureSetConnector")]
	public  partial class RelationshipFeatureSetConnector : Microsoft.VisualStudio.Modeling.Utilities.Connector
	{
		#region RelationshipFeatureSetConnector's Generated Shape Code
		/// <summary>
		/// MetaClass Guid String
		/// </summary>
		public new const System.String MetaClassGuidString = "658d7348-55b1-4d1e-9e8b-6badea005df9";
		/// <summary>
		/// MetaClass Guid
		/// </summary>
		public static readonly new System.Guid MetaClassGuid = new System.Guid(ISpySoft.FeatureModelLanguage.Designer.RelationshipFeatureSetConnector.MetaClassGuidString);
		#region Boilerplate code for every Shape-derived class
		/// <summary>
		/// Style Set
		/// </summary>
		private static Microsoft.VisualStudio.Modeling.Diagrams.StyleSet classStyleSet = null;
		/// <summary>
		/// Shape Fields
		/// </summary>
		private static Microsoft.VisualStudio.Modeling.Diagrams.ShapeFieldCollection shapeFields = null;
		/// <summary>
		/// Style Set
		/// </summary>
		protected override Microsoft.VisualStudio.Modeling.Diagrams.StyleSet ClassStyleSet
		{
			get
			{
				if (classStyleSet == null)
				{
					classStyleSet = CreateClassStyleSet();
				}
				return classStyleSet;
			}
		}
		/// <summary>
		/// Shape Fields
		/// </summary>
		public override Microsoft.VisualStudio.Modeling.Diagrams.ShapeFieldCollection ShapeFields
		{
			get
			{
				if (shapeFields == null)
				{
					shapeFields = CreateShapeFields();
				}
				return shapeFields;
			}
		}
		#endregion
		#endregion

	}
	#region RelationshipFeatureSetConnector's Generated Constructor Code
	public  partial class RelationshipFeatureSetConnector
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public RelationshipFeatureSetConnector(Microsoft.VisualStudio.Modeling.Store store, Microsoft.VisualStudio.Modeling.ModelDataBag bag) : base(store.DefaultPartition, bag)
		{
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static RelationshipFeatureSetConnector CreateRelationshipFeatureSetConnector(Microsoft.VisualStudio.Modeling.Store store)
		{
			return CreateRelationshipFeatureSetConnector(store.DefaultPartition);
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static RelationshipFeatureSetConnector CreateAndInitializeRelationshipFeatureSetConnector(Microsoft.VisualStudio.Modeling.Store store, Microsoft.VisualStudio.Modeling.AttributeAssignment[] assignments)
		{
			return CreateAndInitializeRelationshipFeatureSetConnector(store.DefaultPartition, assignments);
		}
		/// <summary>
		/// Constructor
		/// </summary>
		public RelationshipFeatureSetConnector(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.ModelDataBag bag)
			: base(partition, bag)
		{
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static RelationshipFeatureSetConnector CreateRelationshipFeatureSetConnector(Microsoft.VisualStudio.Modeling.Partition partition)
		{
			return (RelationshipFeatureSetConnector)partition.ElementFactory.CreateElement(typeof(RelationshipFeatureSetConnector));
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static RelationshipFeatureSetConnector CreateAndInitializeRelationshipFeatureSetConnector(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.AttributeAssignment[] assignments)
		{
			return (RelationshipFeatureSetConnector)partition.ElementFactory.CreateElement(typeof(RelationshipFeatureSetConnector), assignments);
		}
	}
	#endregion
	#region Class Factory Creator for RelationshipFeatureSetConnector
	/// <summary>
	/// RelationshipFeatureSetConnector Class Factory Creator
	/// </summary>
	[Microsoft.VisualStudio.Modeling.ElementFactoryCreatorFor(typeof(ISpySoft.FeatureModelLanguage.Designer.RelationshipFeatureSetConnector))]
	public sealed class RelationshipFeatureSetConnectorElementFactoryCreator : Microsoft.VisualStudio.Modeling.ElementFactoryCreator
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public RelationshipFeatureSetConnectorElementFactoryCreator()
		{
		}
		/// <summary>
		/// Class Factory Create Method
		/// </summary>
		public override Microsoft.VisualStudio.Modeling.ModelElement Create(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.ModelDataBag bag)
		{
			return new ISpySoft.FeatureModelLanguage.Designer.RelationshipFeatureSetConnector( partition, bag );
		}
		/// <summary>
		/// Create an instance of the createor object
		/// </summary>
		public static RelationshipFeatureSetConnectorElementFactoryCreator Instance
		{
			get
			{
				return new RelationshipFeatureSetConnectorElementFactoryCreator();
			}
		}
	}
	#endregion

}
namespace ISpySoft.FeatureModelLanguage.Designer
{
	/// <summary>
	/// 
	/// </summary>
	[Microsoft.VisualStudio.Modeling.ShapeFor(typeof(ISpySoft.FeatureModelLanguage.DomainModel.FeatureModel))]
	[System.ComponentModel.ToolboxItemFilterAttribute(FeatureModelLanguageDiagram.DiagramFilterString, System.ComponentModel.ToolboxItemFilterType.Require)]
	[System.CLSCompliant(true)]
	[System.Serializable]
	[Microsoft.VisualStudio.Modeling.MetaClass("2cc9d4db-8656-4a6f-bc05-00ecc76e3a5f")]
	[Microsoft.VisualStudio.Modeling.MetaObject(ISpySoft.FeatureModelLanguage.Designer.FeatureModelLanguageDiagram.MetaClassGuidString, "FeatureModelLanguageDiagram")]
	public  partial class FeatureModelLanguageDiagram : Microsoft.VisualStudio.Modeling.Utilities.Diagram
	{
		#region FeatureModelLanguageDiagram's Generated Diagram Code
		/// <summary>
		/// MetaClass Guid String
		/// </summary>
		public new const System.String MetaClassGuidString = "e3075b44-0bfd-424a-b617-32e8f713b50d";
		/// <summary>
		/// MetaClass Guid
		/// </summary>
		public static readonly new System.Guid MetaClassGuid = new System.Guid(ISpySoft.FeatureModelLanguage.Designer.FeatureModelLanguageDiagram.MetaClassGuidString);
		#region Boilerplate code for every Shape-derived class
		/// <summary>
		/// Style Set
		/// </summary>
		private static Microsoft.VisualStudio.Modeling.Diagrams.StyleSet classStyleSet = null;
		/// <summary>
		/// Shape Fields
		/// </summary>
		private static Microsoft.VisualStudio.Modeling.Diagrams.ShapeFieldCollection shapeFields = null;
		/// <summary>
		/// Style Set
		/// </summary>
		protected override Microsoft.VisualStudio.Modeling.Diagrams.StyleSet ClassStyleSet
		{
			get
			{
				if (classStyleSet == null)
				{
					classStyleSet = CreateClassStyleSet();
				}
				return classStyleSet;
			}
		}
		/// <summary>
		/// Shape Fields
		/// </summary>
		public override Microsoft.VisualStudio.Modeling.Diagrams.ShapeFieldCollection ShapeFields
		{
			get
			{
				if (shapeFields == null)
				{
					shapeFields = CreateShapeFields();
				}
				return shapeFields;
			}
		}
		#endregion
		#endregion

	}
	#region FeatureModelLanguageDiagram's Generated Constructor Code
	public  partial class FeatureModelLanguageDiagram
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public FeatureModelLanguageDiagram(Microsoft.VisualStudio.Modeling.Store store, Microsoft.VisualStudio.Modeling.ModelDataBag bag) : base(store.DefaultPartition, bag)
		{
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static FeatureModelLanguageDiagram CreateFeatureModelLanguageDiagram(Microsoft.VisualStudio.Modeling.Store store)
		{
			return CreateFeatureModelLanguageDiagram(store.DefaultPartition);
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static FeatureModelLanguageDiagram CreateAndInitializeFeatureModelLanguageDiagram(Microsoft.VisualStudio.Modeling.Store store, Microsoft.VisualStudio.Modeling.AttributeAssignment[] assignments)
		{
			return CreateAndInitializeFeatureModelLanguageDiagram(store.DefaultPartition, assignments);
		}
		/// <summary>
		/// Constructor
		/// </summary>
		public FeatureModelLanguageDiagram(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.ModelDataBag bag)
			: base(partition, bag)
		{
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static FeatureModelLanguageDiagram CreateFeatureModelLanguageDiagram(Microsoft.VisualStudio.Modeling.Partition partition)
		{
			return (FeatureModelLanguageDiagram)partition.ElementFactory.CreateElement(typeof(FeatureModelLanguageDiagram));
		}
		/// <summary>
		/// Class Factory
		/// </summary>
		public static FeatureModelLanguageDiagram CreateAndInitializeFeatureModelLanguageDiagram(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.AttributeAssignment[] assignments)
		{
			return (FeatureModelLanguageDiagram)partition.ElementFactory.CreateElement(typeof(FeatureModelLanguageDiagram), assignments);
		}
	}
	#endregion
	#region Class Factory Creator for FeatureModelLanguageDiagram
	/// <summary>
	/// FeatureModelLanguageDiagram Class Factory Creator
	/// </summary>
	[Microsoft.VisualStudio.Modeling.ElementFactoryCreatorFor(typeof(ISpySoft.FeatureModelLanguage.Designer.FeatureModelLanguageDiagram))]
	public sealed class FeatureModelLanguageDiagramElementFactoryCreator : Microsoft.VisualStudio.Modeling.ElementFactoryCreator
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public FeatureModelLanguageDiagramElementFactoryCreator()
		{
		}
		/// <summary>
		/// Class Factory Create Method
		/// </summary>
		public override Microsoft.VisualStudio.Modeling.ModelElement Create(Microsoft.VisualStudio.Modeling.Partition partition, Microsoft.VisualStudio.Modeling.ModelDataBag bag)
		{
			return new ISpySoft.FeatureModelLanguage.Designer.FeatureModelLanguageDiagram( partition, bag );
		}
		/// <summary>
		/// Create an instance of the createor object
		/// </summary>
		public static FeatureModelLanguageDiagramElementFactoryCreator Instance
		{
			get
			{
				return new FeatureModelLanguageDiagramElementFactoryCreator();
			}
		}
	}
	#endregion

}


#region SubStore Partial Class To Specify Closures
namespace ISpySoft.FeatureModelLanguage.Designer
{
	#region Using directives
	using System;
	using System.Collections.Generic;
	using Microsoft.VisualStudio.Modeling;
	using Microsoft.VisualStudio.Modeling.Diagrams;
	using Microsoft.VisualStudio.Modeling.Utilities;
	#endregion

	public  partial class FeatureModelLanguageDesigner
	{
		/// <summary>
		/// CopyClosure cache
		/// </summary>
		private static Microsoft.VisualStudio.Modeling.IElementVisitorFilter copyClosureMember;
		/// <summary>
		/// RemoveClosure cache
		/// </summary>
		private static Microsoft.VisualStudio.Modeling.IElementVisitorFilter removeClosureMember;
		/// <summary>
		/// Returns an IElementVisitorFilter that corresponds to the ClosureType.
		/// </summary>
		/// <param name="type">closure type</param>
		/// <param name="rootElements">collection of root elements</param>
		/// <returns>IElementVisitorFilter or null</returns>
		public override Microsoft.VisualStudio.Modeling.IElementVisitorFilter GetClosureFilter(Microsoft.VisualStudio.Modeling.ClosureType type, System.Collections.ICollection rootElements)
		{
			switch (type)
			{
				case Microsoft.VisualStudio.Modeling.ClosureType.CopyClosure:
					return FeatureModelLanguageDesigner.CopyClosure;
				case Microsoft.VisualStudio.Modeling.ClosureType.RemoveClosure:
					return FeatureModelLanguageDesigner.RemoveClosure;
			}
			return base.GetClosureFilter(type, rootElements);
		}
		/// <summary>
		/// CopyClosure cache
		/// </summary>
		private static IElementVisitorFilter CopyClosure
		{
			get
			{
				// Incorporate all of the closures from the models we extend
				if (FeatureModelLanguageDesigner.copyClosureMember == null)
				{
					ChainingElementVisitorFilter copyFilter = new ChainingElementVisitorFilter();
										copyFilter.AddFilter(new CoreMetaModelCopyFilter(false));
					copyFilter.AddFilter(new CoreDesignSurfaceMetaModelCopyFilter());
					copyFilter.AddFilter(new UtilitiesCopyClosure());
					copyFilter.AddFilter(new FeatureModelLanguageDesignerCopyClosure());
					
					FeatureModelLanguageDesigner.copyClosureMember = copyFilter;
				}
				return FeatureModelLanguageDesigner.copyClosureMember;
			}
		}
		/// <summary>
		/// RemoveClosure cache
		/// </summary>
		private static IElementVisitorFilter RemoveClosure
		{
			get
			{
				// Incorporate all of the closures from the models we extend
				if (FeatureModelLanguageDesigner.removeClosureMember == null)
				{
					ChainingElementVisitorFilter removeFilter = new ChainingElementVisitorFilter();
										removeFilter.AddFilter(new CoreMetaModelRemoveFilter(false));
					removeFilter.AddFilter(new CoreDesignSurfaceMetaModelRemoveFilter());
					removeFilter.AddFilter(new UtilitiesRemoveClosure());
					removeFilter.AddFilter(new FeatureModelLanguageDesignerRemoveClosure());

					FeatureModelLanguageDesigner.removeClosureMember = removeFilter;
				}
				return FeatureModelLanguageDesigner.removeClosureMember;
			}
		}
	}
}
#endregion

